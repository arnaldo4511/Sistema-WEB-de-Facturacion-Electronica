package pe.modelo.pojo;
// Generated 17-ago-2017 14:14:43 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario",
        schema = "administracion",
        uniqueConstraints = @UniqueConstraint(columnNames = "nombre")
)
public class Usuario implements java.io.Serializable {

    private long id;
    //@Transient
    //private long idRol;
    //@JsonIgnore
    private Rol rol;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioCreacion;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioModificacion;
    private PuntoVenta puntoVenta;
    //@JsonIgnore
    private Empresa empresa;
    //@JsonIgnore
    private Entidad entidad;
    private String nombre;
    private String clave;
    //@JsonIgnore
    private Date fechaCreacion;
    //@JsonIgnore
    private Date fechaModificacion;
    private Boolean activo;
    @JsonIgnore
    private Set<Operacion> operacionsForIdUsuarioCreacion = new HashSet<Operacion>(0);
    @JsonIgnore
    private Set<Ubigeo> ubigeosForIdUsuarioCreacion = new HashSet<Ubigeo>(0);
    @JsonIgnore
    private Set<Operacion> operacionsForIdUsuarioModificacion = new HashSet<Operacion>(0);
    @JsonIgnore
    private Set<Menu> menusForIdUsuarioModificacion = new HashSet<Menu>(0);
    @JsonIgnore
    private Set<Producto> productosForIdUsuarioModificacion = new HashSet<Producto>(0);
    @JsonIgnore
    private Set<Empresa> empresasForIdUsuarioModificacion = new HashSet<Empresa>(0);
    @JsonIgnore
    private Set<Rol> rolsForIdUsuarioModificacion = new HashSet<Rol>(0);
    @JsonIgnore
    private Set<DocumentoVenta> documentoVentasForIdUsuarioModificacion = new HashSet<DocumentoVenta>(0);
    @JsonIgnore
    private Set<Empresa> empresasForIdUsuarioCreacion = new HashSet<Empresa>(0);
    @JsonIgnore
    private Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioModificacion = new HashSet<TipoDocumentoEntidad>(0);
    @JsonIgnore
    private Set<RolMenu> rolMenusForIdUsuarioModificacion = new HashSet<RolMenu>(0);
    @JsonIgnore
    private Set<Unidad> unidadsForIdUsuarioCreacion = new HashSet<Unidad>(0);
    @JsonIgnore
    private Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioCreacion = new HashSet<ResumenVentasGrupoVenta>(0);
    @JsonIgnore
    private Set<Entidad> entidadsForIdUsuarioModificacion = new HashSet<Entidad>(0);
    @JsonIgnore
    private Set<Usuario> usuariosForIdUsuarioCreacion = new HashSet<Usuario>(0);
    @JsonIgnore
    private Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioCreacion = new HashSet<TipoDocumentoEntidad>(0);
    @JsonIgnore
    private Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioCreacion = new HashSet<EstadoDocumentoVenta>(0);
    @JsonIgnore
    private Set<Moneda> monedasForIdUsuarioCreacion = new HashSet<Moneda>(0);
    @JsonIgnore
    private Set<Menu> menusForIdUsuarioCreacion = new HashSet<Menu>(0);
    @JsonIgnore
    private Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioCreacion = new HashSet<RolMenuOperacion>(0);
    @JsonIgnore
    private Set<Ubigeo> ubigeosForIdUsuarioModificacion = new HashSet<Ubigeo>(0);
    @JsonIgnore
    private Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioModificacion = new HashSet<DocumentoVentaDetalle>(0);
    @JsonIgnore
    private Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioModificacion = new HashSet<ResumenVentasGrupo>(0);
    @JsonIgnore
    private Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioCreacion = new HashSet<TipoDocumentoVenta>(0);
    @JsonIgnore
    private Set<Rol> rolsForIdUsuarioCreacion = new HashSet<Rol>(0);
    @JsonIgnore
    private Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioModificacion = new HashSet<ResumenVentasGrupoVenta>(0);
    @JsonIgnore
    private Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioModificacion = new HashSet<TipoDocumentoVenta>(0);
    @JsonIgnore
    private Set<RolMenu> rolMenusForIdUsuarioCreacion = new HashSet<RolMenu>(0);
    @JsonIgnore
    private Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioModificacion = new HashSet<RolMenuOperacion>(0);
    @JsonIgnore
    private Set<PuntoVenta> puntoVentasForIdUsuarioModificacion = new HashSet<PuntoVenta>(0);
    @JsonIgnore
    private Set<Entidad> entidadsForIdUsuarioCreacion = new HashSet<Entidad>(0);
    @JsonIgnore
    private Set<UsuarioLog> usuarioLogsForIdUsuarioCreacion = new HashSet<UsuarioLog>(0);
    @JsonIgnore
    private Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioCreacion = new HashSet<PuntoVentaSerie>(0);
    @JsonIgnore
    private Set<Moneda> monedasForIdUsuarioModificacion = new HashSet<Moneda>(0);
    @JsonIgnore
    private Set<UsuarioLog> usuarioLogsForIdUsuarioModificacion = new HashSet<UsuarioLog>(0);
    @JsonIgnore
    private Set<ResumenVentas> resumenVentasesForIdUsuarioModificacion = new HashSet<ResumenVentas>(0);
    @JsonIgnore
    private Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioModificacion = new HashSet<EstadoDocumentoVenta>(0);
    @JsonIgnore
    private Set<ResumenVentas> resumenVentasesForIdUsuarioCreacion = new HashSet<ResumenVentas>(0);
    @JsonIgnore
    private Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioCreacion = new HashSet<ResumenVentasGrupo>(0);
    @JsonIgnore
    private Set<Unidad> unidadsForIdUsuarioModificacion = new HashSet<Unidad>(0);
    @JsonIgnore
    private Set<Usuario> usuariosForIdUsuarioModificacion = new HashSet<Usuario>(0);
    @JsonIgnore
    private Set<DocumentoVenta> documentoVentasForIdUsuarioCreacion = new HashSet<DocumentoVenta>(0);
    @JsonIgnore
    private Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioModificacion = new HashSet<PuntoVentaSerie>(0);
    @JsonIgnore
    private Set<Producto> productosForIdUsuarioCreacion = new HashSet<Producto>(0);
    @JsonIgnore
    private Set<PuntoVenta> puntoVentasForIdUsuarioCreacion = new HashSet<PuntoVenta>(0);
    @JsonIgnore
    private Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioCreacion = new HashSet<DocumentoVentaDetalle>(0);

    public Usuario() {
    }

    public Usuario(long id, String nombre, String clave, Date fechaCreacion) {
        this.id = id;
        this.nombre = nombre;
        this.clave = clave;
        this.fechaCreacion = fechaCreacion;
    }

    public Usuario(long id, Rol rol, Usuario usuarioByIdUsuarioCreacion, Usuario usuarioByIdUsuarioModificacion, PuntoVenta puntoVenta, Empresa empresa, Entidad entidad, String nombre, Boolean activo, String clave, Date fechaCreacion, Date fechaModificacion, Set<Operacion> operacionsForIdUsuarioCreacion, Set<Ubigeo> ubigeosForIdUsuarioCreacion, Set<Operacion> operacionsForIdUsuarioModificacion, Set<Menu> menusForIdUsuarioModificacion, Set<Producto> productosForIdUsuarioModificacion, Set<Empresa> empresasForIdUsuarioModificacion, Set<Rol> rolsForIdUsuarioModificacion, Set<DocumentoVenta> documentoVentasForIdUsuarioModificacion, Set<Empresa> empresasForIdUsuarioCreacion, Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioModificacion, Set<RolMenu> rolMenusForIdUsuarioModificacion, Set<Unidad> unidadsForIdUsuarioCreacion, Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioCreacion, Set<Entidad> entidadsForIdUsuarioModificacion, Set<Usuario> usuariosForIdUsuarioCreacion, Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioCreacion, Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioCreacion, Set<Moneda> monedasForIdUsuarioCreacion, Set<Menu> menusForIdUsuarioCreacion, Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioCreacion, Set<Ubigeo> ubigeosForIdUsuarioModificacion, Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioModificacion, Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioModificacion, Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioCreacion, Set<Rol> rolsForIdUsuarioCreacion, Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioModificacion, Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioModificacion, Set<RolMenu> rolMenusForIdUsuarioCreacion, Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioModificacion, Set<PuntoVenta> puntoVentasForIdUsuarioModificacion, Set<Entidad> entidadsForIdUsuarioCreacion, Set<UsuarioLog> usuarioLogsForIdUsuarioCreacion, Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioCreacion, Set<Moneda> monedasForIdUsuarioModificacion, Set<UsuarioLog> usuarioLogsForIdUsuarioModificacion, Set<ResumenVentas> resumenVentasesForIdUsuarioModificacion, Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioModificacion, Set<ResumenVentas> resumenVentasesForIdUsuarioCreacion, Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioCreacion, Set<Unidad> unidadsForIdUsuarioModificacion, Set<Usuario> usuariosForIdUsuarioModificacion, Set<DocumentoVenta> documentoVentasForIdUsuarioCreacion, Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioModificacion, Set<Producto> productosForIdUsuarioCreacion, Set<PuntoVenta> puntoVentasForIdUsuarioCreacion, Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioCreacion) {
        this.id = id;
        this.rol = rol;
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
        this.puntoVenta = puntoVenta;
        this.empresa = empresa;
        this.entidad = entidad;
        this.nombre = nombre;
        this.clave = clave;
        this.fechaCreacion = fechaCreacion;
        this.fechaModificacion = fechaModificacion;
        this.activo = activo;
        this.operacionsForIdUsuarioCreacion = operacionsForIdUsuarioCreacion;
        this.ubigeosForIdUsuarioCreacion = ubigeosForIdUsuarioCreacion;
        this.operacionsForIdUsuarioModificacion = operacionsForIdUsuarioModificacion;
        this.menusForIdUsuarioModificacion = menusForIdUsuarioModificacion;
        this.productosForIdUsuarioModificacion = productosForIdUsuarioModificacion;
        this.empresasForIdUsuarioModificacion = empresasForIdUsuarioModificacion;
        this.rolsForIdUsuarioModificacion = rolsForIdUsuarioModificacion;
        this.documentoVentasForIdUsuarioModificacion = documentoVentasForIdUsuarioModificacion;
        this.empresasForIdUsuarioCreacion = empresasForIdUsuarioCreacion;
        this.tipoDocumentoEntidadsForIdUsuarioModificacion = tipoDocumentoEntidadsForIdUsuarioModificacion;
        this.rolMenusForIdUsuarioModificacion = rolMenusForIdUsuarioModificacion;
        this.unidadsForIdUsuarioCreacion = unidadsForIdUsuarioCreacion;
        this.resumenVentasGrupoVentasForIdUsuarioCreacion = resumenVentasGrupoVentasForIdUsuarioCreacion;
        this.entidadsForIdUsuarioModificacion = entidadsForIdUsuarioModificacion;
        this.usuariosForIdUsuarioCreacion = usuariosForIdUsuarioCreacion;
        this.tipoDocumentoEntidadsForIdUsuarioCreacion = tipoDocumentoEntidadsForIdUsuarioCreacion;
        this.estadoDocumentoVentasForIdUsuarioCreacion = estadoDocumentoVentasForIdUsuarioCreacion;
        this.monedasForIdUsuarioCreacion = monedasForIdUsuarioCreacion;
        this.menusForIdUsuarioCreacion = menusForIdUsuarioCreacion;
        this.rolMenuOperacionsForIdUsuarioCreacion = rolMenuOperacionsForIdUsuarioCreacion;
        this.ubigeosForIdUsuarioModificacion = ubigeosForIdUsuarioModificacion;
        this.documentoVentaDetallesForIdUsuarioModificacion = documentoVentaDetallesForIdUsuarioModificacion;
        this.resumenVentasGruposForIdUsuarioModificacion = resumenVentasGruposForIdUsuarioModificacion;
        this.tipoDocumentoVentasForIdUsuarioCreacion = tipoDocumentoVentasForIdUsuarioCreacion;
        this.rolsForIdUsuarioCreacion = rolsForIdUsuarioCreacion;
        this.resumenVentasGrupoVentasForIdUsuarioModificacion = resumenVentasGrupoVentasForIdUsuarioModificacion;
        this.tipoDocumentoVentasForIdUsuarioModificacion = tipoDocumentoVentasForIdUsuarioModificacion;
        this.rolMenusForIdUsuarioCreacion = rolMenusForIdUsuarioCreacion;
        this.rolMenuOperacionsForIdUsuarioModificacion = rolMenuOperacionsForIdUsuarioModificacion;
        this.puntoVentasForIdUsuarioModificacion = puntoVentasForIdUsuarioModificacion;
        this.entidadsForIdUsuarioCreacion = entidadsForIdUsuarioCreacion;
        this.usuarioLogsForIdUsuarioCreacion = usuarioLogsForIdUsuarioCreacion;
        this.puntoVentaSeriesForIdUsuarioCreacion = puntoVentaSeriesForIdUsuarioCreacion;
        this.monedasForIdUsuarioModificacion = monedasForIdUsuarioModificacion;
        this.usuarioLogsForIdUsuarioModificacion = usuarioLogsForIdUsuarioModificacion;
        this.resumenVentasesForIdUsuarioModificacion = resumenVentasesForIdUsuarioModificacion;
        this.estadoDocumentoVentasForIdUsuarioModificacion = estadoDocumentoVentasForIdUsuarioModificacion;
        this.resumenVentasesForIdUsuarioCreacion = resumenVentasesForIdUsuarioCreacion;
        this.resumenVentasGruposForIdUsuarioCreacion = resumenVentasGruposForIdUsuarioCreacion;
        this.unidadsForIdUsuarioModificacion = unidadsForIdUsuarioModificacion;
        this.usuariosForIdUsuarioModificacion = usuariosForIdUsuarioModificacion;
        this.documentoVentasForIdUsuarioCreacion = documentoVentasForIdUsuarioCreacion;
        this.puntoVentaSeriesForIdUsuarioModificacion = puntoVentaSeriesForIdUsuarioModificacion;
        this.productosForIdUsuarioCreacion = productosForIdUsuarioCreacion;
        this.puntoVentasForIdUsuarioCreacion = puntoVentasForIdUsuarioCreacion;
        this.documentoVentaDetallesForIdUsuarioCreacion = documentoVentaDetallesForIdUsuarioCreacion;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    //@JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_rol")
    public Rol getRol() {
        return this.rol;
    }

    //@Transient
    //public Long getIdRol() {
    //    return this.idRol;
    //}
    //@Transient
    //public void setIdRol(Long idRol) {
    //    this.idRol = idRol;
    //}
    //@JsonProperty
    public void setRol(Rol rol) {
        this.rol = rol;
    }

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_creacion")
    public Usuario getUsuarioByIdUsuarioCreacion() {
        return this.usuarioByIdUsuarioCreacion;
    }

    @JsonProperty
    public void setUsuarioByIdUsuarioCreacion(Usuario usuarioByIdUsuarioCreacion) {
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
    }

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_modificacion")
    public Usuario getUsuarioByIdUsuarioModificacion() {
        return this.usuarioByIdUsuarioModificacion;
    }

    @JsonProperty
    public void setUsuarioByIdUsuarioModificacion(Usuario usuarioByIdUsuarioModificacion) {
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_punto_venta")
    public PuntoVenta getPuntoVenta() {
        return this.puntoVenta;
    }

    public void setPuntoVenta(PuntoVenta puntoVenta) {
        this.puntoVenta = puntoVenta;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_empresa")
    public Empresa getEmpresa() {
        return this.empresa;
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad")
    public Entidad getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad entidad) {
        this.entidad = entidad;
    }

    @Column(name = "nombre", unique = true, nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "clave", nullable = false, length = 50)
    public String getClave() {
        return this.clave;
    }

    public void setClave(String clave) {
        this.clave = clave;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_creacion", nullable = false, length = 29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_modificacion", length = 29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    @Column(name = "activo")
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Operacion> getOperacionsForIdUsuarioCreacion() {
        return this.operacionsForIdUsuarioCreacion;
    }

    public void setOperacionsForIdUsuarioCreacion(Set<Operacion> operacionsForIdUsuarioCreacion) {
        this.operacionsForIdUsuarioCreacion = operacionsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Ubigeo> getUbigeosForIdUsuarioCreacion() {
        return this.ubigeosForIdUsuarioCreacion;
    }

    public void setUbigeosForIdUsuarioCreacion(Set<Ubigeo> ubigeosForIdUsuarioCreacion) {
        this.ubigeosForIdUsuarioCreacion = ubigeosForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Operacion> getOperacionsForIdUsuarioModificacion() {
        return this.operacionsForIdUsuarioModificacion;
    }

    public void setOperacionsForIdUsuarioModificacion(Set<Operacion> operacionsForIdUsuarioModificacion) {
        this.operacionsForIdUsuarioModificacion = operacionsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Menu> getMenusForIdUsuarioModificacion() {
        return this.menusForIdUsuarioModificacion;
    }

    public void setMenusForIdUsuarioModificacion(Set<Menu> menusForIdUsuarioModificacion) {
        this.menusForIdUsuarioModificacion = menusForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Producto> getProductosForIdUsuarioModificacion() {
        return this.productosForIdUsuarioModificacion;
    }

    public void setProductosForIdUsuarioModificacion(Set<Producto> productosForIdUsuarioModificacion) {
        this.productosForIdUsuarioModificacion = productosForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Empresa> getEmpresasForIdUsuarioModificacion() {
        return this.empresasForIdUsuarioModificacion;
    }

    public void setEmpresasForIdUsuarioModificacion(Set<Empresa> empresasForIdUsuarioModificacion) {
        this.empresasForIdUsuarioModificacion = empresasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Rol> getRolsForIdUsuarioModificacion() {
        return this.rolsForIdUsuarioModificacion;
    }

    public void setRolsForIdUsuarioModificacion(Set<Rol> rolsForIdUsuarioModificacion) {
        this.rolsForIdUsuarioModificacion = rolsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<DocumentoVenta> getDocumentoVentasForIdUsuarioModificacion() {
        return this.documentoVentasForIdUsuarioModificacion;
    }

    public void setDocumentoVentasForIdUsuarioModificacion(Set<DocumentoVenta> documentoVentasForIdUsuarioModificacion) {
        this.documentoVentasForIdUsuarioModificacion = documentoVentasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Empresa> getEmpresasForIdUsuarioCreacion() {
        return this.empresasForIdUsuarioCreacion;
    }

    public void setEmpresasForIdUsuarioCreacion(Set<Empresa> empresasForIdUsuarioCreacion) {
        this.empresasForIdUsuarioCreacion = empresasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<TipoDocumentoEntidad> getTipoDocumentoEntidadsForIdUsuarioModificacion() {
        return this.tipoDocumentoEntidadsForIdUsuarioModificacion;
    }

    public void setTipoDocumentoEntidadsForIdUsuarioModificacion(Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioModificacion) {
        this.tipoDocumentoEntidadsForIdUsuarioModificacion = tipoDocumentoEntidadsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<RolMenu> getRolMenusForIdUsuarioModificacion() {
        return this.rolMenusForIdUsuarioModificacion;
    }

    public void setRolMenusForIdUsuarioModificacion(Set<RolMenu> rolMenusForIdUsuarioModificacion) {
        this.rolMenusForIdUsuarioModificacion = rolMenusForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Unidad> getUnidadsForIdUsuarioCreacion() {
        return this.unidadsForIdUsuarioCreacion;
    }

    public void setUnidadsForIdUsuarioCreacion(Set<Unidad> unidadsForIdUsuarioCreacion) {
        this.unidadsForIdUsuarioCreacion = unidadsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<ResumenVentasGrupoVenta> getResumenVentasGrupoVentasForIdUsuarioCreacion() {
        return this.resumenVentasGrupoVentasForIdUsuarioCreacion;
    }

    public void setResumenVentasGrupoVentasForIdUsuarioCreacion(Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioCreacion) {
        this.resumenVentasGrupoVentasForIdUsuarioCreacion = resumenVentasGrupoVentasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Entidad> getEntidadsForIdUsuarioModificacion() {
        return this.entidadsForIdUsuarioModificacion;
    }

    public void setEntidadsForIdUsuarioModificacion(Set<Entidad> entidadsForIdUsuarioModificacion) {
        this.entidadsForIdUsuarioModificacion = entidadsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Usuario> getUsuariosForIdUsuarioCreacion() {
        return this.usuariosForIdUsuarioCreacion;
    }

    public void setUsuariosForIdUsuarioCreacion(Set<Usuario> usuariosForIdUsuarioCreacion) {
        this.usuariosForIdUsuarioCreacion = usuariosForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<TipoDocumentoEntidad> getTipoDocumentoEntidadsForIdUsuarioCreacion() {
        return this.tipoDocumentoEntidadsForIdUsuarioCreacion;
    }

    public void setTipoDocumentoEntidadsForIdUsuarioCreacion(Set<TipoDocumentoEntidad> tipoDocumentoEntidadsForIdUsuarioCreacion) {
        this.tipoDocumentoEntidadsForIdUsuarioCreacion = tipoDocumentoEntidadsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<EstadoDocumentoVenta> getEstadoDocumentoVentasForIdUsuarioCreacion() {
        return this.estadoDocumentoVentasForIdUsuarioCreacion;
    }

    public void setEstadoDocumentoVentasForIdUsuarioCreacion(Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioCreacion) {
        this.estadoDocumentoVentasForIdUsuarioCreacion = estadoDocumentoVentasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Moneda> getMonedasForIdUsuarioCreacion() {
        return this.monedasForIdUsuarioCreacion;
    }

    public void setMonedasForIdUsuarioCreacion(Set<Moneda> monedasForIdUsuarioCreacion) {
        this.monedasForIdUsuarioCreacion = monedasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Menu> getMenusForIdUsuarioCreacion() {
        return this.menusForIdUsuarioCreacion;
    }

    public void setMenusForIdUsuarioCreacion(Set<Menu> menusForIdUsuarioCreacion) {
        this.menusForIdUsuarioCreacion = menusForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<RolMenuOperacion> getRolMenuOperacionsForIdUsuarioCreacion() {
        return this.rolMenuOperacionsForIdUsuarioCreacion;
    }

    public void setRolMenuOperacionsForIdUsuarioCreacion(Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioCreacion) {
        this.rolMenuOperacionsForIdUsuarioCreacion = rolMenuOperacionsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Ubigeo> getUbigeosForIdUsuarioModificacion() {
        return this.ubigeosForIdUsuarioModificacion;
    }

    public void setUbigeosForIdUsuarioModificacion(Set<Ubigeo> ubigeosForIdUsuarioModificacion) {
        this.ubigeosForIdUsuarioModificacion = ubigeosForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<DocumentoVentaDetalle> getDocumentoVentaDetallesForIdUsuarioModificacion() {
        return this.documentoVentaDetallesForIdUsuarioModificacion;
    }

    public void setDocumentoVentaDetallesForIdUsuarioModificacion(Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioModificacion) {
        this.documentoVentaDetallesForIdUsuarioModificacion = documentoVentaDetallesForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<ResumenVentasGrupo> getResumenVentasGruposForIdUsuarioModificacion() {
        return this.resumenVentasGruposForIdUsuarioModificacion;
    }

    public void setResumenVentasGruposForIdUsuarioModificacion(Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioModificacion) {
        this.resumenVentasGruposForIdUsuarioModificacion = resumenVentasGruposForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<TipoDocumentoVenta> getTipoDocumentoVentasForIdUsuarioCreacion() {
        return this.tipoDocumentoVentasForIdUsuarioCreacion;
    }

    public void setTipoDocumentoVentasForIdUsuarioCreacion(Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioCreacion) {
        this.tipoDocumentoVentasForIdUsuarioCreacion = tipoDocumentoVentasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Rol> getRolsForIdUsuarioCreacion() {
        return this.rolsForIdUsuarioCreacion;
    }

    public void setRolsForIdUsuarioCreacion(Set<Rol> rolsForIdUsuarioCreacion) {
        this.rolsForIdUsuarioCreacion = rolsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<ResumenVentasGrupoVenta> getResumenVentasGrupoVentasForIdUsuarioModificacion() {
        return this.resumenVentasGrupoVentasForIdUsuarioModificacion;
    }

    public void setResumenVentasGrupoVentasForIdUsuarioModificacion(Set<ResumenVentasGrupoVenta> resumenVentasGrupoVentasForIdUsuarioModificacion) {
        this.resumenVentasGrupoVentasForIdUsuarioModificacion = resumenVentasGrupoVentasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<TipoDocumentoVenta> getTipoDocumentoVentasForIdUsuarioModificacion() {
        return this.tipoDocumentoVentasForIdUsuarioModificacion;
    }

    public void setTipoDocumentoVentasForIdUsuarioModificacion(Set<TipoDocumentoVenta> tipoDocumentoVentasForIdUsuarioModificacion) {
        this.tipoDocumentoVentasForIdUsuarioModificacion = tipoDocumentoVentasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<RolMenu> getRolMenusForIdUsuarioCreacion() {
        return this.rolMenusForIdUsuarioCreacion;
    }

    public void setRolMenusForIdUsuarioCreacion(Set<RolMenu> rolMenusForIdUsuarioCreacion) {
        this.rolMenusForIdUsuarioCreacion = rolMenusForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<RolMenuOperacion> getRolMenuOperacionsForIdUsuarioModificacion() {
        return this.rolMenuOperacionsForIdUsuarioModificacion;
    }

    public void setRolMenuOperacionsForIdUsuarioModificacion(Set<RolMenuOperacion> rolMenuOperacionsForIdUsuarioModificacion) {
        this.rolMenuOperacionsForIdUsuarioModificacion = rolMenuOperacionsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<PuntoVenta> getPuntoVentasForIdUsuarioModificacion() {
        return this.puntoVentasForIdUsuarioModificacion;
    }

    public void setPuntoVentasForIdUsuarioModificacion(Set<PuntoVenta> puntoVentasForIdUsuarioModificacion) {
        this.puntoVentasForIdUsuarioModificacion = puntoVentasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Entidad> getEntidadsForIdUsuarioCreacion() {
        return this.entidadsForIdUsuarioCreacion;
    }

    public void setEntidadsForIdUsuarioCreacion(Set<Entidad> entidadsForIdUsuarioCreacion) {
        this.entidadsForIdUsuarioCreacion = entidadsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<UsuarioLog> getUsuarioLogsForIdUsuarioCreacion() {
        return this.usuarioLogsForIdUsuarioCreacion;
    }

    public void setUsuarioLogsForIdUsuarioCreacion(Set<UsuarioLog> usuarioLogsForIdUsuarioCreacion) {
        this.usuarioLogsForIdUsuarioCreacion = usuarioLogsForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<PuntoVentaSerie> getPuntoVentaSeriesForIdUsuarioCreacion() {
        return this.puntoVentaSeriesForIdUsuarioCreacion;
    }

    public void setPuntoVentaSeriesForIdUsuarioCreacion(Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioCreacion) {
        this.puntoVentaSeriesForIdUsuarioCreacion = puntoVentaSeriesForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Moneda> getMonedasForIdUsuarioModificacion() {
        return this.monedasForIdUsuarioModificacion;
    }

    public void setMonedasForIdUsuarioModificacion(Set<Moneda> monedasForIdUsuarioModificacion) {
        this.monedasForIdUsuarioModificacion = monedasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<UsuarioLog> getUsuarioLogsForIdUsuarioModificacion() {
        return this.usuarioLogsForIdUsuarioModificacion;
    }

    public void setUsuarioLogsForIdUsuarioModificacion(Set<UsuarioLog> usuarioLogsForIdUsuarioModificacion) {
        this.usuarioLogsForIdUsuarioModificacion = usuarioLogsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<ResumenVentas> getResumenVentasesForIdUsuarioModificacion() {
        return this.resumenVentasesForIdUsuarioModificacion;
    }

    public void setResumenVentasesForIdUsuarioModificacion(Set<ResumenVentas> resumenVentasesForIdUsuarioModificacion) {
        this.resumenVentasesForIdUsuarioModificacion = resumenVentasesForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<EstadoDocumentoVenta> getEstadoDocumentoVentasForIdUsuarioModificacion() {
        return this.estadoDocumentoVentasForIdUsuarioModificacion;
    }

    public void setEstadoDocumentoVentasForIdUsuarioModificacion(Set<EstadoDocumentoVenta> estadoDocumentoVentasForIdUsuarioModificacion) {
        this.estadoDocumentoVentasForIdUsuarioModificacion = estadoDocumentoVentasForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<ResumenVentas> getResumenVentasesForIdUsuarioCreacion() {
        return this.resumenVentasesForIdUsuarioCreacion;
    }

    public void setResumenVentasesForIdUsuarioCreacion(Set<ResumenVentas> resumenVentasesForIdUsuarioCreacion) {
        this.resumenVentasesForIdUsuarioCreacion = resumenVentasesForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<ResumenVentasGrupo> getResumenVentasGruposForIdUsuarioCreacion() {
        return this.resumenVentasGruposForIdUsuarioCreacion;
    }

    public void setResumenVentasGruposForIdUsuarioCreacion(Set<ResumenVentasGrupo> resumenVentasGruposForIdUsuarioCreacion) {
        this.resumenVentasGruposForIdUsuarioCreacion = resumenVentasGruposForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Unidad> getUnidadsForIdUsuarioModificacion() {
        return this.unidadsForIdUsuarioModificacion;
    }

    public void setUnidadsForIdUsuarioModificacion(Set<Unidad> unidadsForIdUsuarioModificacion) {
        this.unidadsForIdUsuarioModificacion = unidadsForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<Usuario> getUsuariosForIdUsuarioModificacion() {
        return this.usuariosForIdUsuarioModificacion;
    }

    public void setUsuariosForIdUsuarioModificacion(Set<Usuario> usuariosForIdUsuarioModificacion) {
        this.usuariosForIdUsuarioModificacion = usuariosForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<DocumentoVenta> getDocumentoVentasForIdUsuarioCreacion() {
        return this.documentoVentasForIdUsuarioCreacion;
    }

    public void setDocumentoVentasForIdUsuarioCreacion(Set<DocumentoVenta> documentoVentasForIdUsuarioCreacion) {
        this.documentoVentasForIdUsuarioCreacion = documentoVentasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioModificacion")
    public Set<PuntoVentaSerie> getPuntoVentaSeriesForIdUsuarioModificacion() {
        return this.puntoVentaSeriesForIdUsuarioModificacion;
    }

    public void setPuntoVentaSeriesForIdUsuarioModificacion(Set<PuntoVentaSerie> puntoVentaSeriesForIdUsuarioModificacion) {
        this.puntoVentaSeriesForIdUsuarioModificacion = puntoVentaSeriesForIdUsuarioModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<Producto> getProductosForIdUsuarioCreacion() {
        return this.productosForIdUsuarioCreacion;
    }

    public void setProductosForIdUsuarioCreacion(Set<Producto> productosForIdUsuarioCreacion) {
        this.productosForIdUsuarioCreacion = productosForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<PuntoVenta> getPuntoVentasForIdUsuarioCreacion() {
        return this.puntoVentasForIdUsuarioCreacion;
    }

    public void setPuntoVentasForIdUsuarioCreacion(Set<PuntoVenta> puntoVentasForIdUsuarioCreacion) {
        this.puntoVentasForIdUsuarioCreacion = puntoVentasForIdUsuarioCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByIdUsuarioCreacion")
    public Set<DocumentoVentaDetalle> getDocumentoVentaDetallesForIdUsuarioCreacion() {
        return this.documentoVentaDetallesForIdUsuarioCreacion;
    }

    public void setDocumentoVentaDetallesForIdUsuarioCreacion(Set<DocumentoVentaDetalle> documentoVentaDetallesForIdUsuarioCreacion) {
        this.documentoVentaDetallesForIdUsuarioCreacion = documentoVentaDetallesForIdUsuarioCreacion;
    }

}
