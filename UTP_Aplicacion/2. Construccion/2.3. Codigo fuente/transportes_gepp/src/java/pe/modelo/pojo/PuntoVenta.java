package pe.modelo.pojo;
// Generated 17-ago-2017 14:14:43 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PuntoVenta generated by hbm2java
 */
@Entity
@Table(name = "punto_venta",
        schema = "ventas",
        uniqueConstraints = @UniqueConstraint(columnNames = {"nombre", "id_empresa"})
)
public class PuntoVenta implements java.io.Serializable {

    private long id;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioModificacion;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioCreacion;
    private Empresa empresa;
    private String nombre;
    private Date fechaCreacion;
    private Date fechaModificacion;
    @JsonIgnore
    private Set<DocumentoVenta> documentoVentas = new HashSet<DocumentoVenta>(0);
    @JsonIgnore
    private Set<PuntoVentaSerie> puntoVentaSeries = new HashSet<PuntoVentaSerie>(0);
    @JsonIgnore
    private Set<Usuario> usuarios = new HashSet<Usuario>(0);

    public PuntoVenta() {
    }

    public PuntoVenta(long id, Usuario usuarioByIdUsuarioCreacion, Empresa empresa, String nombre, Date fechaCreacion) {
        this.id = id;
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
        this.empresa = empresa;
        this.nombre = nombre;
        this.fechaCreacion = fechaCreacion;
    }

    public PuntoVenta(long id, Usuario usuarioByIdUsuarioModificacion, Usuario usuarioByIdUsuarioCreacion, Empresa empresa, String nombre, Date fechaCreacion, Date fechaModificacion, Set<DocumentoVenta> documentoVentas, Set<PuntoVentaSerie> puntoVentaSeries, Set<Usuario> usuarios) {
        this.id = id;
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
        this.empresa = empresa;
        this.nombre = nombre;
        this.fechaCreacion = fechaCreacion;
        this.fechaModificacion = fechaModificacion;
        this.documentoVentas = documentoVentas;
        this.puntoVentaSeries = puntoVentaSeries;
        this.usuarios = usuarios;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_modificacion")
    public Usuario getUsuarioByIdUsuarioModificacion() {
        return this.usuarioByIdUsuarioModificacion;
    }

    public void setUsuarioByIdUsuarioModificacion(Usuario usuarioByIdUsuarioModificacion) {
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_creacion", nullable = false)
    public Usuario getUsuarioByIdUsuarioCreacion() {
        return this.usuarioByIdUsuarioCreacion;
    }

    public void setUsuarioByIdUsuarioCreacion(Usuario usuarioByIdUsuarioCreacion) {
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_empresa", nullable = false)
    public Empresa getEmpresa() {
        return this.empresa;
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @Column(name = "nombre", nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_creacion", nullable = false, length = 29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_modificacion", length = 29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntoVenta")
    public Set<DocumentoVenta> getDocumentoVentas() {
        return this.documentoVentas;
    }

    public void setDocumentoVentas(Set<DocumentoVenta> documentoVentas) {
        this.documentoVentas = documentoVentas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntoVenta")
    public Set<PuntoVentaSerie> getPuntoVentaSeries() {
        return this.puntoVentaSeries;
    }

    public void setPuntoVentaSeries(Set<PuntoVentaSerie> puntoVentaSeries) {
        this.puntoVentaSeries = puntoVentaSeries;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntoVenta")
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }

    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }

}
