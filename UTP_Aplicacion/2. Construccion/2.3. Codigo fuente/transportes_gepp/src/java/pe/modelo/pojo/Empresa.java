package pe.modelo.pojo;
// Generated 17-ago-2017 14:14:43 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Empresa generated by hbm2java
 */
@Entity
@Table(name = "empresa",
         schema = "public",
         uniqueConstraints = @UniqueConstraint(columnNames = "id_entidad")
)
public class Empresa implements java.io.Serializable {

    private long id;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioModificacion;
    @JsonIgnore
    private Usuario usuarioByIdUsuarioCreacion;
    //@JsonIgnore
    private Entidad entidad;
    private String correoAdmin;
    private String contrasenhiaCorreo;
    private String logo;
    private boolean activo;
    @JsonIgnore
    private Date fechaCreacion;
    @JsonIgnore
    private Date fechaModificacion;
    @JsonIgnore
    private Set<ResumenVentas> resumenVentases = new HashSet<ResumenVentas>(0);
    @JsonIgnore
    private Set<Usuario> usuarios = new HashSet<Usuario>(0);
    @JsonIgnore
    private Set<Producto> productos = new HashSet<Producto>(0);
    @JsonIgnore
    private Set<PuntoVenta> puntoVentas = new HashSet<PuntoVenta>(0);
    @JsonIgnore
    private Set<DocumentoVenta> documentoVentas = new HashSet<DocumentoVenta>(0);

    public Empresa() {
    }

    public Empresa(long id, Usuario usuarioByIdUsuarioCreacion, Entidad entidad, boolean activo, Date fechaCreacion) {
        this.id = id;
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
        this.entidad = entidad;
        this.activo = activo;
        this.fechaCreacion = fechaCreacion;
    }

    public Empresa(long id, Usuario usuarioByIdUsuarioModificacion, Usuario usuarioByIdUsuarioCreacion, Entidad entidad, String correoAdmin, String contrasenhiaCorreo, String logo, boolean activo, Date fechaCreacion, Date fechaModificacion, Set<ResumenVentas> resumenVentases, Set<Usuario> usuarios, Set<Producto> productos, Set<PuntoVenta> puntoVentas, Set<DocumentoVenta> documentoVentas) {
        this.id = id;
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
        this.entidad = entidad;
        this.correoAdmin = correoAdmin;
        this.contrasenhiaCorreo = contrasenhiaCorreo;
        this.logo = logo;
        this.activo = activo;
        this.fechaCreacion = fechaCreacion;
        this.fechaModificacion = fechaModificacion;
        this.resumenVentases = resumenVentases;
        this.usuarios = usuarios;
        this.productos = productos;
        this.puntoVentas = puntoVentas;
        this.documentoVentas = documentoVentas;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_modificacion")
    public Usuario getUsuarioByIdUsuarioModificacion() {
        return this.usuarioByIdUsuarioModificacion;
    }

    public void setUsuarioByIdUsuarioModificacion(Usuario usuarioByIdUsuarioModificacion) {
        this.usuarioByIdUsuarioModificacion = usuarioByIdUsuarioModificacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario_creacion", nullable = false)
    public Usuario getUsuarioByIdUsuarioCreacion() {
        return this.usuarioByIdUsuarioCreacion;
    }

    public void setUsuarioByIdUsuarioCreacion(Usuario usuarioByIdUsuarioCreacion) {
        this.usuarioByIdUsuarioCreacion = usuarioByIdUsuarioCreacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad", unique = true, nullable = false)
    public Entidad getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad entidad) {
        this.entidad = entidad;
    }

    @Column(name = "correo_admin", length = 250)
    public String getCorreoAdmin() {
        return this.correoAdmin;
    }

    public void setCorreoAdmin(String correoAdmin) {
        this.correoAdmin = correoAdmin;
    }

    @Column(name = "contrasenhia_correo", length = 250)
    public String getContrasenhiaCorreo() {
        return this.contrasenhiaCorreo;
    }

    public void setContrasenhiaCorreo(String contrasenhiaCorreo) {
        this.contrasenhiaCorreo = contrasenhiaCorreo;
    }

    @Column(name = "logo", length = 50)
    public String getLogo() {
        return this.logo;
    }

    public void setLogo(String logo) {
        this.logo = logo;
    }

    @Column(name = "activo", nullable = false)
    public boolean isActivo() {
        return this.activo;
    }

    public void setActivo(boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_creacion", nullable = false, length = 29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_modificacion", length = 29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
    public Set<ResumenVentas> getResumenVentases() {
        return this.resumenVentases;
    }

    public void setResumenVentases(Set<ResumenVentas> resumenVentases) {
        this.resumenVentases = resumenVentases;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }

    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
    public Set<Producto> getProductos() {
        return this.productos;
    }

    public void setProductos(Set<Producto> productos) {
        this.productos = productos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
    public Set<PuntoVenta> getPuntoVentas() {
        return this.puntoVentas;
    }

    public void setPuntoVentas(Set<PuntoVenta> puntoVentas) {
        this.puntoVentas = puntoVentas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
    public Set<DocumentoVenta> getDocumentoVentas() {
        return this.documentoVentas;
    }

    public void setDocumentoVentas(Set<DocumentoVenta> documentoVentas) {
        this.documentoVentas = documentoVentas;
    }

}
